// <auto-generated />
using System;
using Catering.Infrastructure.StoredModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catering.Infrastructure.Migrations
{
    [DbContext(typeof(StoredDbContext))]
    [Migration("20250608043546_AddRecetas")]
    partial class AddRecetas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ClienteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdCliente");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b971b55-e539-4939-9240-825a48402329"),
                            Nombre = "Cliente Test"
                        });
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ComidaStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdComida");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Estado");

                    b.Property<Guid?>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrdenTrabajo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdOrdenTrabajo");

                    b.ToTable("Comida");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ContratoEntregaCanceladaStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdContratoEntregaCancelada");

                    b.Property<DateTime>("FechaCancelada")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCancelada");

                    b.Property<Guid>("IdContrato")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdContrato");

                    b.ToTable("ContratoEntregaCancelada");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ContratoStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdContrato");

                    b.Property<int>("DiasContratados")
                        .HasColumnType("int")
                        .HasColumnName("DiasContratados");

                    b.Property<int>("DiasRealizados")
                        .HasColumnType("int")
                        .HasColumnName("DiasRealizados");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaInicio");

                    b.Property<DateTime?>("FechaUltimoRealizado")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaUltimoRealizado");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPlanAlimentario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPlanAlimentario");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.IngredienteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdIngrediente");

                    b.Property<decimal>("CostoCompra")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CostoCompra");

                    b.Property<decimal>("CostoVenta")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CostoVenta");

                    b.Property<string>("Medicion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Medicion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a5749df-d4dc-41c0-b6ab-8695818fc9e6"),
                            CostoCompra = 10.0m,
                            CostoVenta = 15.0m,
                            Medicion = "kg",
                            Nombre = "Brócoli",
                            Tipo = "Verdura"
                        },
                        new
                        {
                            Id = new Guid("44b773af-e296-4e3c-b14d-e2666a9ec9d0"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Zanahoria",
                            Tipo = "Verdura"
                        },
                        new
                        {
                            Id = new Guid("2c769505-6d43-4c97-b41f-932ad482e392"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Nueces",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("d8b1ac8c-ff87-4f98-bb99-01a74e468068"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "litro",
                            Nombre = "Aceite de oliva",
                            Tipo = "Aceite"
                        },
                        new
                        {
                            Id = new Guid("ec8e74f0-0374-458d-bddf-aca570199fdf"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Limón",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("12aa9ee3-bd3c-484c-a884-3e3c15f41ead"),
                            CostoCompra = 10.0m,
                            CostoVenta = 15.0m,
                            Medicion = "kg",
                            Nombre = "Fideos",
                            Tipo = "Verdura"
                        },
                        new
                        {
                            Id = new Guid("32f0b892-9b46-422e-b150-0371fcd53c3a"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Hongos",
                            Tipo = "Verdura"
                        },
                        new
                        {
                            Id = new Guid("19463210-1541-4657-b434-40cbbe632ad0"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Langostinos",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("4dabd6cb-1f9b-472d-af4d-b4d33a8f5b05"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "litro",
                            Nombre = "Ajo",
                            Tipo = "Aceite"
                        },
                        new
                        {
                            Id = new Guid("5c6f43b5-4cea-44a8-bd2f-a9b10d2d8767"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Huevos",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("70b99e59-1771-4e65-8089-ffac97b1d6f3"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Lentejas",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("0745f464-037e-480b-be23-03e496455b07"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Calabaza",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("ab285967-94c6-48a2-b66d-42971e3054ae"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Almendras",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("77fe8568-533f-44dd-b1bf-945e688ecd3a"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Aceite de oliva",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("7e976679-6260-4ddc-bdaf-1893f97b49a2"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Sal",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("56b8e3f1-1d7f-4def-9701-5c1897d615bf"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Apio",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("86c608c6-a760-45c1-a0fd-3f5be3e80e0f"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Zanahoria",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("4db4c7f2-d408-4cd0-9158-1274da111e09"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Puerro",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("57926f10-5803-45f6-91f0-17d0da6da8d9"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Cebolla",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("fa650ba6-9eaa-4f17-96a4-4a389587e958"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Tomillo",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("fec95a30-bf71-431e-867e-8e772ba4111e"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Cuscús",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("3118439c-0fed-48f2-8360-7aa88c54c5fc"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Pechuga de pollo",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("eeb37d25-bed5-47df-895b-d1d71991ba41"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Pimiento verde",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("8086a17c-8982-46e2-ac9b-1daaeb851511"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Calabacín",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("b0a2dd75-e553-4449-8361-4fdde9dd5cd9"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Cúrcuma",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("98984a30-ca54-409b-8414-5d63f874990b"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Cebolla",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("0e2c4760-659c-461b-b5a4-625f977006bb"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Zanahoria",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("06039340-c688-4198-be53-9b121b8b6095"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Brócoli",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("67187905-2b25-4506-a130-80a27c14657a"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Jengibre fresco",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("9e2a9322-8141-4217-9676-f0854e6be3bb"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "lt",
                            Nombre = "Caldo de pollo bajo en sodio",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("2dac2664-b05a-4d3d-a1fb-6484cf974040"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Pan integral",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("defe0a39-59e9-4700-85b1-fbcfd707ecd8"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Palta",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("f81da1c8-3a09-435a-98bd-a57f01c4bd88"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Huevo",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("3ed4a2b6-0e34-42f8-a09a-6ea9c7cc4cd7"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Queso parmesano",
                            Tipo = "Fruta"
                        },
                        new
                        {
                            Id = new Guid("df14fcb6-b47c-4a1e-b168-fea14acd34e9"),
                            CostoCompra = 5.0m,
                            CostoVenta = 8.0m,
                            Medicion = "kg",
                            Nombre = "Hierbas frescas",
                            Tipo = "Fruta"
                        });
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoClienteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdOrdenTrabajoCliente");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrdenTrabajo")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdOrdenTrabajo");

                    b.ToTable("OrdenTrabajoCliente");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdOrdenTrabajo");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreado");

                    b.Property<Guid>("IdReceta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarioCocinero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdReceta");

                    b.HasIndex("IdUsuarioCocinero");

                    b.ToTable("OrdenTrabajo");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.PlanAlimentarioRecetaStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdPlanAlimentarioReceta");

                    b.Property<int>("Dia")
                        .HasColumnType("int")
                        .HasColumnName("Dia");

                    b.Property<Guid>("IdPlanAlimentario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdReceta")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanAlimentario");

                    b.HasIndex("IdReceta");

                    b.ToTable("PlanAlimentarioReceta");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.PlanAlimentarioStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdPlanAlimentario");

                    b.Property<int>("CantidadDias")
                        .HasColumnType("int")
                        .HasColumnName("CantidadDias");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("PlanAlimentario");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.RecetaIngredienteStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdRecetaIngrediente");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("Cantidad");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Detalle");

                    b.Property<Guid>("IdIngrediente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdReceta")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdIngrediente");

                    b.HasIndex("IdReceta");

                    b.ToTable("RecetaIngrediente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ab78f81-87d2-498e-94f1-231aa8dfa5bf"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("6a5749df-d4dc-41c0-b6ab-8695818fc9e6"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03")
                        },
                        new
                        {
                            Id = new Guid("eaba08a6-c753-43f8-b9db-5d7ea87eb839"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("44b773af-e296-4e3c-b14d-e2666a9ec9d0"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03")
                        },
                        new
                        {
                            Id = new Guid("3028a30f-d3b4-47f4-af18-0f89324fffbe"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("2c769505-6d43-4c97-b41f-932ad482e392"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03")
                        },
                        new
                        {
                            Id = new Guid("b913dea9-e201-42d5-b800-7d8ee5269245"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("d8b1ac8c-ff87-4f98-bb99-01a74e468068"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03")
                        },
                        new
                        {
                            Id = new Guid("3fffac45-8a06-4556-bda9-8fca0eccf11b"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("ec8e74f0-0374-458d-bddf-aca570199fdf"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03")
                        },
                        new
                        {
                            Id = new Guid("8195bdbc-00a0-4917-8ce5-8dc0986106c2"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("12aa9ee3-bd3c-484c-a884-3e3c15f41ead"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227")
                        },
                        new
                        {
                            Id = new Guid("93127af8-53be-4935-a33a-44c8bf6d6fea"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("32f0b892-9b46-422e-b150-0371fcd53c3a"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227")
                        },
                        new
                        {
                            Id = new Guid("716b380b-1bee-4629-b09e-9f1ba06a7f97"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("19463210-1541-4657-b434-40cbbe632ad0"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227")
                        },
                        new
                        {
                            Id = new Guid("bfc9ca35-e128-4e40-abbe-b1877bd1b3d4"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("4dabd6cb-1f9b-472d-af4d-b4d33a8f5b05"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227")
                        },
                        new
                        {
                            Id = new Guid("30e45c75-bf1f-4341-b4ae-03b8cee6e789"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("5c6f43b5-4cea-44a8-bd2f-a9b10d2d8767"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227")
                        },
                        new
                        {
                            Id = new Guid("fbd088e2-e31b-4b08-b2d8-5e8f35bfa6be"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("70b99e59-1771-4e65-8089-ffac97b1d6f3"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15")
                        },
                        new
                        {
                            Id = new Guid("6e392090-fd95-4405-ac36-409ec4759a42"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("0745f464-037e-480b-be23-03e496455b07"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15")
                        },
                        new
                        {
                            Id = new Guid("486738dd-3b9c-48bd-ba60-aeeec60d7c8f"),
                            Cantidad = 0.5,
                            Detalle = "",
                            IdIngrediente = new Guid("ab285967-94c6-48a2-b66d-42971e3054ae"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15")
                        },
                        new
                        {
                            Id = new Guid("59cdbb6f-68e7-494b-bc5d-41b860e0e60c"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("77fe8568-533f-44dd-b1bf-945e688ecd3a"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15")
                        },
                        new
                        {
                            Id = new Guid("6160026e-9a9f-482b-8afb-7ac04dd55c15"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("7e976679-6260-4ddc-bdaf-1893f97b49a2"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15")
                        },
                        new
                        {
                            Id = new Guid("5b7d3848-9e4a-4063-8861-41d234f2381d"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("56b8e3f1-1d7f-4def-9701-5c1897d615bf"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7")
                        },
                        new
                        {
                            Id = new Guid("b4030821-5d3d-48b9-b19c-4d0b741717a8"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("86c608c6-a760-45c1-a0fd-3f5be3e80e0f"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7")
                        },
                        new
                        {
                            Id = new Guid("9742cbf8-4db4-4605-9c6f-e9fada719add"),
                            Cantidad = 0.5,
                            Detalle = "",
                            IdIngrediente = new Guid("4db4c7f2-d408-4cd0-9158-1274da111e09"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7")
                        },
                        new
                        {
                            Id = new Guid("65548f1b-feba-40e0-8a91-a363319c9041"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("57926f10-5803-45f6-91f0-17d0da6da8d9"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7")
                        },
                        new
                        {
                            Id = new Guid("84072b97-77c9-4ccb-9b9b-d29ede40db54"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("fa650ba6-9eaa-4f17-96a4-4a389587e958"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7")
                        },
                        new
                        {
                            Id = new Guid("db320652-02b5-4b56-b27f-1b1ce746e6f3"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("fec95a30-bf71-431e-867e-8e772ba4111e"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2")
                        },
                        new
                        {
                            Id = new Guid("166a1ed5-daef-4475-9c7f-ec25dbb2b33f"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("3118439c-0fed-48f2-8360-7aa88c54c5fc"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2")
                        },
                        new
                        {
                            Id = new Guid("72db7bc6-a6d6-4f11-864c-8f382a2c266d"),
                            Cantidad = 0.5,
                            Detalle = "",
                            IdIngrediente = new Guid("eeb37d25-bed5-47df-895b-d1d71991ba41"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2")
                        },
                        new
                        {
                            Id = new Guid("c8fff2ed-f9bd-4784-b37d-98001112329a"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("8086a17c-8982-46e2-ac9b-1daaeb851511"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2")
                        },
                        new
                        {
                            Id = new Guid("9cb5baaa-1c99-4101-81f9-3ced1057b715"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("b0a2dd75-e553-4449-8361-4fdde9dd5cd9"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2")
                        },
                        new
                        {
                            Id = new Guid("e2b2ece3-d813-4414-a72f-77e35f54c1dc"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("98984a30-ca54-409b-8414-5d63f874990b"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04")
                        },
                        new
                        {
                            Id = new Guid("ac457561-0556-4c8b-a886-9b6e095cfcc1"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("0e2c4760-659c-461b-b5a4-625f977006bb"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04")
                        },
                        new
                        {
                            Id = new Guid("c31db85c-e0bb-4497-92d1-06be898bfcb7"),
                            Cantidad = 0.5,
                            Detalle = "",
                            IdIngrediente = new Guid("06039340-c688-4198-be53-9b121b8b6095"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04")
                        },
                        new
                        {
                            Id = new Guid("3f5d575b-15fe-415b-a697-60e234f7f52c"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("67187905-2b25-4506-a130-80a27c14657a"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04")
                        },
                        new
                        {
                            Id = new Guid("ad97edc6-71fd-44d9-ae11-b9cca918308b"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("9e2a9322-8141-4217-9676-f0854e6be3bb"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04")
                        },
                        new
                        {
                            Id = new Guid("dd0ec80c-ccd2-412e-bcd9-d91c3b8253e2"),
                            Cantidad = 2.0,
                            Detalle = "",
                            IdIngrediente = new Guid("2dac2664-b05a-4d3d-a1fb-6484cf974040"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df")
                        },
                        new
                        {
                            Id = new Guid("40c0485a-9790-4c68-8a31-f2041485c895"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("defe0a39-59e9-4700-85b1-fbcfd707ecd8"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df")
                        },
                        new
                        {
                            Id = new Guid("9e874ca6-76dd-41d1-bbf3-809585eb29ae"),
                            Cantidad = 0.5,
                            Detalle = "",
                            IdIngrediente = new Guid("f81da1c8-3a09-435a-98bd-a57f01c4bd88"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df")
                        },
                        new
                        {
                            Id = new Guid("a8fffd2d-4255-47ef-a0e8-8922d5178b32"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("3ed4a2b6-0e34-42f8-a09a-6ea9c7cc4cd7"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df")
                        },
                        new
                        {
                            Id = new Guid("baff6777-24ab-49ea-9433-0514ffd94f6f"),
                            Cantidad = 1.0,
                            Detalle = "",
                            IdIngrediente = new Guid("df14fcb6-b47c-4a1e-b168-fea14acd34e9"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df")
                        });
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.RecetaInstruccionStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdRecetaInstruccion");

                    b.Property<Guid>("IdReceta")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Instruccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Instruccion");

                    b.HasKey("Id");

                    b.HasIndex("IdReceta");

                    b.ToTable("RecetaInstruccion");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd0b4eef-c47b-429d-92c6-2a84027ffd92"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03"),
                            Instruccion = "1. Cocina el brócoli en agua con sal durante 5 minutos."
                        },
                        new
                        {
                            Id = new Guid("e3b91da5-e0f6-4fd6-905c-b17b76c817c2"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03"),
                            Instruccion = "2. Ralla la zanahoria y mézclala con el brócoli."
                        },
                        new
                        {
                            Id = new Guid("c3d6adb5-71c3-4d26-a516-fb2d6147918c"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03"),
                            Instruccion = "3. Prepara una vinagreta con aceite de oliva y limón."
                        },
                        new
                        {
                            Id = new Guid("f4c716df-d287-43c1-a3e2-ffb7dd1bc698"),
                            IdReceta = new Guid("38b29f41-0757-4f98-af43-84394606eb03"),
                            Instruccion = "4. Pica las nueces y agrégalas a la ensalada."
                        },
                        new
                        {
                            Id = new Guid("deb42c99-787c-4051-bf2c-7428e56940f3"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227"),
                            Instruccion = "1. Cocina los fideos en agua hirviendo."
                        },
                        new
                        {
                            Id = new Guid("bcc129e2-d309-4828-82c7-edb1b9613c39"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227"),
                            Instruccion = "2. Dora el ajo en una sartén con aceite."
                        },
                        new
                        {
                            Id = new Guid("0413cadb-11f8-40ee-82bd-3519d20233a7"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227"),
                            Instruccion = "3. Agrega los hongos y saltéalos por 10 minutos."
                        },
                        new
                        {
                            Id = new Guid("30ff4ce5-06b5-45e1-84c6-8a941588fcd5"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227"),
                            Instruccion = "4. Añade los langostinos y cocina hasta que estén dorados."
                        },
                        new
                        {
                            Id = new Guid("59a7382e-7091-4ff1-9e69-38daaee7f6d6"),
                            IdReceta = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227"),
                            Instruccion = "5. Incorpora los huevos batidos y revuelve hasta que cuajen."
                        },
                        new
                        {
                            Id = new Guid("287aa52a-1cd7-46c2-ab20-b2881904623b"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15"),
                            Instruccion = "1. Cocina la calabaza y mézclala con las lentejas."
                        },
                        new
                        {
                            Id = new Guid("1f820b52-f93c-4494-a466-9dbe9b9f4173"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15"),
                            Instruccion = "2. Pica las almendras y agrégalas."
                        },
                        new
                        {
                            Id = new Guid("ddd33118-7eb5-42d0-8bd9-571aa00c7983"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15"),
                            Instruccion = "3. Aliña con aceite de oliva y sal."
                        },
                        new
                        {
                            Id = new Guid("490efb22-ea42-4357-a52e-32144bcffeec"),
                            IdReceta = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15"),
                            Instruccion = "4. Sirve con hummus por encima."
                        },
                        new
                        {
                            Id = new Guid("0476c087-ae00-4995-bef4-b1bb5622ae35"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7"),
                            Instruccion = "1. Pela y corta las verduras en trozos pequeños."
                        },
                        new
                        {
                            Id = new Guid("0ed37ae3-7200-4f57-a9a3-926af7723a30"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7"),
                            Instruccion = "2. Saltea la cebolla y el puerro en una olla con aceite."
                        },
                        new
                        {
                            Id = new Guid("37e39156-d452-406f-a968-9329a3d2fbfe"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7"),
                            Instruccion = "3. Agrega el resto de las verduras y cocina por 5 minutos."
                        },
                        new
                        {
                            Id = new Guid("d36861c3-4df9-485e-b896-0ed3f12ee29f"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7"),
                            Instruccion = "4. Añade agua y hierbas aromáticas."
                        },
                        new
                        {
                            Id = new Guid("b857ef2b-5cd6-495d-8b89-a027136d5daf"),
                            IdReceta = new Guid("acf9388f-1ae9-4888-871a-720651408cf7"),
                            Instruccion = "5. Cocina a fuego lento por 15 minutos y cuela el caldo."
                        },
                        new
                        {
                            Id = new Guid("0d6464de-cb60-4ab2-b996-12bb3efac8cd"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2"),
                            Instruccion = "1. Cocina el cuscús según las instrucciones del paquete."
                        },
                        new
                        {
                            Id = new Guid("f27a3e6e-a4b5-4a5a-88a2-67ae0f2a346e"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2"),
                            Instruccion = "2. Saltea la cebolla picada hasta que esté dorada."
                        },
                        new
                        {
                            Id = new Guid("83af7ebe-12e0-447e-a4c6-65ab24f18c0c"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2"),
                            Instruccion = "3. Agrega el pimiento, calabacín y pollo troceado."
                        },
                        new
                        {
                            Id = new Guid("47522d10-132b-4e1e-8e62-e0504f3383f5"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2"),
                            Instruccion = "4. Cocina hasta que el pollo esté bien cocido."
                        },
                        new
                        {
                            Id = new Guid("e54802df-bec4-4fd7-9570-d7c79c19b30f"),
                            IdReceta = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2"),
                            Instruccion = "5. Mezcla con el cuscús y espolvorea cúrcuma."
                        },
                        new
                        {
                            Id = new Guid("e20d1170-072b-4697-8626-b108849d4001"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04"),
                            Instruccion = "1. Cocina el pollo en una cacerola con un poco de aceite hasta dorarlo."
                        },
                        new
                        {
                            Id = new Guid("59939db8-0718-4049-add9-fd34fb96e0c1"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04"),
                            Instruccion = "2. Agrega la cebolla y zanahoria picadas y sofríe por unos minutos."
                        },
                        new
                        {
                            Id = new Guid("c1bc7018-0d4a-4901-b447-ba2e42fa9e64"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04"),
                            Instruccion = "3. Añade el caldo de pollo y deja hervir."
                        },
                        new
                        {
                            Id = new Guid("0eeaa4e4-f78a-40ac-b4bd-f9675e859ca3"),
                            IdReceta = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04"),
                            Instruccion = "4. Incorpora el brócoli y el jengibre rallado. Cocina por 10 minutos."
                        },
                        new
                        {
                            Id = new Guid("eb4ff17c-eae8-4569-b535-aeff70903141"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df"),
                            Instruccion = "1. Tuesta el pan integral."
                        },
                        new
                        {
                            Id = new Guid("ceb44330-9b85-4864-9704-3cbcc80d2324"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df"),
                            Instruccion = "2. Machaca la palta y úntala sobre el pan."
                        },
                        new
                        {
                            Id = new Guid("e2a8025e-8ded-41e6-ba08-8d5152d95808"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df"),
                            Instruccion = "3. Cocina el huevo escalfado y colócalo encima."
                        },
                        new
                        {
                            Id = new Guid("d38600da-f740-4e0a-949f-a5bab086840f"),
                            IdReceta = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df"),
                            Instruccion = "4. Espolvorea queso parmesano y hierbas frescas."
                        });
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.RecetaStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdReceta");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Receta");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38b29f41-0757-4f98-af43-84394606eb03"),
                            Nombre = "Ensalada de brócoli, zanahoria y nueces"
                        },
                        new
                        {
                            Id = new Guid("3d906ea7-e3a3-480d-b2ce-5b4f7586f227"),
                            Nombre = "Fideos con revuelto de hongos y langostinos"
                        },
                        new
                        {
                            Id = new Guid("7f4423a6-f047-4759-b6be-b9260f9d7e15"),
                            Nombre = "Ensalada de lentejas con calabaza, hummus y almendras"
                        },
                        new
                        {
                            Id = new Guid("acf9388f-1ae9-4888-871a-720651408cf7"),
                            Nombre = "Caldo de verduras rápido"
                        },
                        new
                        {
                            Id = new Guid("3aa49abb-9458-4097-8bc0-70118fe7e9f2"),
                            Nombre = "Cuscús con pollo, verduras y cúrcuma"
                        },
                        new
                        {
                            Id = new Guid("0c18e665-5a64-4ba3-8903-999bb5c50d04"),
                            Nombre = "Sopa de pollo con vegetales"
                        },
                        new
                        {
                            Id = new Guid("faac0c33-64f8-4c92-840b-5c0d708719df"),
                            Nombre = "Tostada con palta y huevo escalfado"
                        });
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.UsuarioStoredModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d19a0e52-cf2a-45cb-a99f-7343afb296b4"),
                            Nombre = "Usuario cocinero 1"
                        },
                        new
                        {
                            Id = new Guid("76084be0-b170-44e8-a302-a4b7b34927d6"),
                            Nombre = "Usuario cocinero 2"
                        });
                });

            modelBuilder.Entity("Joseco.Outbox.Contracts.Model.OutboxMessage<Catering.Domain.Abstractions.DomainEvent>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("outboxId");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("CorrelationId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("correlationId");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit")
                        .HasColumnName("processed");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("processedOn");

                    b.Property<string>("SpanId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("spanId");

                    b.Property<string>("TraceId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("traceId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("outboxMessage", "outbox");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ComidaStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.ClienteStoredModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente");

                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoStoredModel", "OrdenTrabajo")
                        .WithMany("Comidas")
                        .HasForeignKey("IdOrdenTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("OrdenTrabajo");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ContratoEntregaCanceladaStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.ContratoStoredModel", "Contrato")
                        .WithMany("EntregasCanceladas")
                        .HasForeignKey("IdContrato")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ContratoStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.ClienteStoredModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.PlanAlimentarioStoredModel", "PlanAlimentario")
                        .WithMany()
                        .HasForeignKey("IdPlanAlimentario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PlanAlimentario");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoClienteStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.ClienteStoredModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoStoredModel", "OrdenTrabajo")
                        .WithMany("Clientes")
                        .HasForeignKey("IdOrdenTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("OrdenTrabajo");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.RecetaStoredModel", "Receta")
                        .WithMany()
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.UsuarioStoredModel", "UsuarioCocinero")
                        .WithMany()
                        .HasForeignKey("IdUsuarioCocinero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receta");

                    b.Navigation("UsuarioCocinero");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.PlanAlimentarioRecetaStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.PlanAlimentarioStoredModel", "PlanAlimentario")
                        .WithMany("Recetas")
                        .HasForeignKey("IdPlanAlimentario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.RecetaStoredModel", "Receta")
                        .WithMany()
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanAlimentario");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.RecetaIngredienteStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.IngredienteStoredModel", "Ingrediente")
                        .WithMany()
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.RecetaStoredModel", "Receta")
                        .WithMany("Ingredientes")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.RecetaInstruccionStoredModel", b =>
                {
                    b.HasOne("Catering.Infrastructure.StoredModel.Entities.RecetaStoredModel", "Receta")
                        .WithMany("Instrucciones")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.ContratoStoredModel", b =>
                {
                    b.Navigation("EntregasCanceladas");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.OrdenTrabajoStoredModel", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Comidas");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.PlanAlimentarioStoredModel", b =>
                {
                    b.Navigation("Recetas");
                });

            modelBuilder.Entity("Catering.Infrastructure.StoredModel.Entities.RecetaStoredModel", b =>
                {
                    b.Navigation("Ingredientes");

                    b.Navigation("Instrucciones");
                });
#pragma warning restore 612, 618
        }
    }
}
