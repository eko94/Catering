services:
  api-gateway:
    container_name: api-gateway
    image: eko1394/api-gateway:1.0.0
    ports:
      - 8090:8080
    depends_on:
      - identity
    networks:
      - nurtricenter-net    
    restart: on-failure
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5272/swagger"]
        interval: 15s
        timeout: 10s
        retries: 3
        start_period: 45s
  identity:
    container_name: identity
    image: eko1394/identity:1.0.0
    ports:
      - 8085:8080
    depends_on:
      - identity-db
      - hashicorp-consul
    networks:
      - nurtricenter-net
    restart: on-failure
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8085/swagger"]
        interval: 15s
        timeout: 10s
        retries: 3
        start_period: 45s
  identity-db:
    container_name: identity-db
    image: eko1394/identity-db:1.0.0
    ports:
      - 1435:1433
    volumes:
      - identity-db-data:/var/opt/mssql
    networks:
      - nurtricenter-net
    restart: on-failure
    environment:
      SA_PASSWORD: "${SA_PASSWORD}"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "sa", "-P" , "${SA_PASSWORD}", "-Q", "select 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  hashicorp-consul:
    container_name: hashicorp-consul
    image: hashicorp/consul:latest
    ports:
      - 8500:8500
    networks:
      - nurtricenter-net
  catering:
    image: eko1394/catering:1.0.0
    ports:
      - 8081:8080
    depends_on:
      - catering-db
      - rabbitmq
    networks:
      - nurtricenter-net
    restart: on-failure
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8081/swagger"]
        interval: 15s
        timeout: 10s
        retries: 3
        start_period: 45s
  catering-db:
    container_name: catering-db
    image: eko1394/catering-db:1.0.0
    ports:
      - 1433:1433
    volumes:
      - catering-db-data:/var/opt/mssql
    networks:
      - nurtricenter-net
    restart: on-failure
    environment:
      SA_PASSWORD: "${SA_PASSWORD}"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "sa", "-P" , "${SA_PASSWORD}", "-Q", "select 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  catering-worker:
    image: eko1394/catering-worker:1.0.0
    depends_on:
      - catering-db
    networks:
      - nurtricenter-net
    restart: on-failure    
  rabbitmq:
    image: rabbitmq:3.13.7-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Puerto AMQP
      - "15672:15672" # UI de gesti√≥n
    volumes:
      - ./.rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
    networks:
      - nurtricenter-net
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  commercial-api:
    container_name: commercial-api
    image: yh03lhz/nurjhz:latest
    volumes:
        - .:/var/www/html
        - commercial_vendor:/var/www/html/vendor
    ports:
        - 9092:80
    networks:
        - nurtricenter-net
    depends_on:
        commercial-db:
            condition: service_healthy
    environment:
        DB_CONNECTION: pgsql
        DB_HOST: commercial-db
        DB_PORT: 5432
        DB_DATABASE: commercial
        DB_USERNAME: commercial
        DB_PASSWORD: commercial123
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_PORT: 5672
        RABBITMQ_USER: admin
        RABBITMQ_PASSWORD: admin
        RABBITMQ_VHOST: /
        APP_ENV: local
        APP_DEBUG: 'true'
    healthcheck:
        test: ['CMD', 'curl', '-f', 'http://localhost:80/api/commercial/catalogs']
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s

  commercial-db:
    container_name: commercial-db
    image: postgres:17
    ports:
        - 5435:5432
    volumes:
        - commercial_db_data:/var/lib/postgresql/data
    environment:
        POSTGRES_USER: commercial
        POSTGRES_PASSWORD: commercial123
        POSTGRES_DB: commercial
    networks:
        - nurtricenter-net
    healthcheck:
        test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
        interval: 30s
        timeout: 5s
        retries: 5
        start_period: 10s
volumes:
  catering-db-data:
  identity-db-data:
  commercial_vendor:
  commercial_db_data:
networks:
  nurtricenter-net:
    container_name: nurtricenter-net